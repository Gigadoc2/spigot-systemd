plugins {
	id 'java'
}

repositories {
	mavenCentral()
	maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
	maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
	compile 'info.faljse:SDNotify:1.1'

}

jar {
	classifier = 'nodeps'
}

task fatJar(type: Jar) {
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

task sourceJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task getSource(dependsOn: sourceJar) {
	inputs.files configurations.runtime
	outputs.dir "${buildDir}/sources"
	doLast {
		def componentIds = configurations.runtime.incoming.resolutionResult.allDependencies.collect { it.selected.id }
		ArtifactResolutionResult result = dependencies.createArtifactResolutionQuery()
			.forComponents(componentIds)
			.withArtifacts(JvmLibrary, SourcesArtifact)
			.execute()
		def sourceArtifacts = []
		result.resolvedComponents.each { ComponentArtifactsResult component ->
			Set<ArtifactResult> sources = component.getArtifacts(SourcesArtifact)
			println "Found ${sources.size()} sources for ${component.id}"
			sources.each { ArtifactResult ar ->
				if (ar instanceof ResolvedArtifactResult) {
					sourceArtifacts << ar.file
				}
			}
		}

		copy {
			from sourceArtifacts
			into "${buildDir}/sources"
		}
	}
}
